# Autogenerated config.py
#
# NOTE: config.py is intended for advanced users who are comfortable
# with manually migrating the config file on qutebrowser upgrades. If
# you prefer, you can also configure qutebrowser using the
# :set/:bind/:config-* commands without having to write a config.py
# file.
#
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Change the argument to True to still load settings configured via autoconfig.yml
config.load_autoconfig(False)

# Which cookies to accept. With QtWebEngine, this setting also controls
# other features with tracking capabilities similar to those of cookies;
# including IndexedDB, DOM storage, filesystem API, service workers, and
# AppCache. Note that with QtWebKit, only `all` and `never` are
# supported as per-domain values. Setting `no-3rdparty` or `no-
# unknown-3rdparty` per-domain on QtWebKit will have the same effect as
# `all`. If this setting is used with URL patterns, the pattern gets
# applied to the origin/first party URL of the page making the request,
# not the request URL. With QtWebEngine 5.15.0+, paths will be stripped
# from URLs, so URL patterns using paths will not match. With
# QtWebEngine 5.15.2+, subdomains are additionally stripped as well, so
# you will typically need to set this setting for `example.com` when the
# cookie is set on `somesubdomain.example.com` for it to work properly.
# To debug issues with this setting, start qutebrowser with `--debug
# --logfilter network --debug-flag log-cookies` which will show all
# cookies being set.
# Type: String
# Valid values:
#   - all: Accept all cookies.
#   - no-3rdparty: Accept cookies from the same origin only. This is known to break some sites, such as GMail.
#   - no-unknown-3rdparty: Accept cookies from the same origin only, unless a cookie is already set for the domain. On QtWebEngine, this is the same as no-3rdparty.
#   - never: Don't accept cookies at all.
config.set('content.cookies.accept', 'all', 'chrome-devtools://*')

# Which cookies to accept. With QtWebEngine, this setting also controls
# other features with tracking capabilities similar to those of cookies;
# including IndexedDB, DOM storage, filesystem API, service workers, and
# AppCache. Note that with QtWebKit, only `all` and `never` are
# supported as per-domain values. Setting `no-3rdparty` or `no-
# unknown-3rdparty` per-domain on QtWebKit will have the same effect as
# `all`. If this setting is used with URL patterns, the pattern gets
# applied to the origin/first party URL of the page making the request,
# not the request URL. With QtWebEngine 5.15.0+, paths will be stripped
config = config  # type: ConfigAPI # noqa: F821 pylint: disable=E0602,C0103
c = c  # type: ConfigContainer # noqa: F821 pylint: disable=E0602,C0103

c.colors.webpage.darkmode.algorithm = 'lightness-cielab'
c.colors.webpage.darkmode.enabled = True
c.colors.webpage.darkmode.threshold.text = 150
c.colors.webpage.darkmode.threshold.background = 205
c.colors.webpage.darkmode.policy.images = 'smart'


# disable insert mode completely
c.input.insert_mode.auto_enter = False
c.input.insert_mode.auto_leave = False
c.input.insert_mode.plugins = False

# Forward unbound keys
c.input.forward_unbound_keys = "all"


ESC_BIND = 'clear-keychain ;; search ;; fullscreen --leave'

c.bindings.default['normal'] = {}
# Bindings
c.bindings.commands['normal'] = {
	# Navigation
	'<ctrl-v>': 'scroll-page 0 0.5',
	'<alt-v>': 'scroll-page 0 -0.5',
	'<ctrl-shift-v>': 'scroll-page 0 1',
	'<alt-shift-v>': 'scroll-page 0 -1',
	# FIXME come up with logical bindings for scrolling left/right

	# Commands
	'<alt-x>': 'set-cmd-text :',
	'<ctrl-x>b': 'bookmark-list',
	'<ctrl-x>k': 'tab-close',
	'<ctrl-x><ctrl-c>': 'quit',


	'<ctrl-s>': 'set-cmd-text /',
	'<ctrl-r>': 'set-cmd-text ?',

	# hinting
	'<alt-s>': 'hint all',

	# history
	# FIXME maybe this should be <C-b> <C-n>? Or would that be too confusing?
	'<ctrl-]>': 'forward',
	'<ctrl-[>': 'back',

	# tabs
	'<ctrl-tab>': 'tab-next',
	'<ctrl-shift-tab>': 'tab-prev',

	# open links
	'<ctrl-l>': 'set-cmd-text -s :open',
	'<alt-l>': 'set-cmd-text -s :open -t',

	# editing
	'<ctrl-f>': 'fake-key <Right>',
	'<ctrl-b>': 'fake-key <Left>',
	'<ctrl-a>': 'fake-key <Home>',
	'<ctrl-e>': 'fake-key <End>',
	'<ctrl-n>': 'fake-key <Down>',
	'<ctrl-p>': 'fake-key <Up>',
	'<alt-f>': 'fake-key <Ctrl-Right>',
	'<alt-b>': 'fake-key <Ctrl-Left>',
	'<ctrl-d>': 'fake-key <Delete>',
	'<alt-d>': 'fake-key <Ctrl-Delete>',
	'<alt-backspace>': 'fake-key <Ctrl-Backspace>',
	'<ctrl-w>': 'fake-key <Ctrl-backspace>',
	'<ctrl-y>': 'insert-text {primary}',

	# Numbers
	# https://github.com/qutebrowser/qutebrowser/issues/4213
	'1': 'fake-key 1',
	'2': 'fake-key 2',
	'3': 'fake-key 3',
	'4': 'fake-key 4',
	'5': 'fake-key 5',
	'6': 'fake-key 6',
	'7': 'fake-key 7',
	'8': 'fake-key 8',
	'9': 'fake-key 9',
	'0': 'fake-key 0',

	# escape hatch
	'<ctrl-h>': 'set-cmd-text -s :help',
	'<ctrl-g>': ESC_BIND,
}

c.bindings.commands['command'] = {
	'<ctrl-s>': 'search-next',
	'<ctrl-r>': 'search-prev',

	'<ctrl-p>': 'completion-item-focus prev',
	'<ctrl-n>': 'completion-item-focus next',

	'<alt-p>': 'command-history-prev',
	'<alt-n>': 'command-history-next',

	# escape hatch
	'<ctrl-g>': 'mode-leave',
}

c.bindings.commands['hint'] = {
	# escape hatch
	'<ctrl-g>': 'mode-leave',
}


c.bindings.commands['caret'] = {
	# escape hatch
	'<ctrl-g>': 'mode-leave',
}
